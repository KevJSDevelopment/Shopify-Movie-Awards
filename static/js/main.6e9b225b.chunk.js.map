{"version":3,"sources":["MovieCard.js","NominationCard.js","Nominations.js","NominationResult.js","NominationList.js","MyNominationCard.js","MyNominations.js","CheckResults.js","Reset.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","item","marginLeft","marginRight","paper","backgroundColor","palette","secondary","light","color","contrastText","padding","button","float","card","zIndex","width","title","overflowX","MovieCard","props","useState","hover","setHover","clicked","setClicked","classes","Grid","xs","className","Slide","in","direction","timeout","index","Paper","id","elevation","onMouseEnter","onMouseLeave","Tooltip","movie","Title","handleYear","Year","arrow","placement","Typography","variant","length","handleMovieTitle","Button","size","disabled","listFull","selected","onClick","handleNominated","NominationCard","nomination","style","submitted","handleRemoved","search","main","movieContainer","gridItems","text","textAlign","submit","margin","results","borderRadius","maxHeight","window","innerHeight","overflowY","label","input","Nominations","transitioning","exit","enter","container","alignItems","spacing","TextField","fullWidth","InputLabelProps","InputProps","type","autoComplete","onChange","ev","fetchMovies","target","value","handleGetMovies","movies","map","nominations","nominationContainer","Grow","handleNominate","setResultsPage","first","second","third","NominationResult","userNominated","setUserNominated","useTheme","handleTextWidth","useEffect","forEach","nom","handleClass","border","primary","year","total","list","NominationList","allNominations","setAllNominations","getAllNominations","a","process","fetch","res","json","data","MyNominationCard","MyNominations","mainContainer","marginBottom","back","CheckResults","setTransitioning","reset","note","Reset","theme1","createMuiTheme","dark","typography","fontFamily","join","theme2","root","height","header","switch","App","setMovies","setNominations","setListFull","setSubmitted","resultsPage","darkMode","setDarkMode","arr","split","then","success","Error","movieArr","Search","push","handleresultsPage","method","headers","body","JSON","stringify","localStorage","setItem","setTimeout","splice","clear","document","querySelector","substring","stringLength","lastChar","charAt","parseInt","iterator","getItem","getNominations","ThemeProvider","align","Switch","checked","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6e9b225b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Paper, Typography, Grid, Slide, Button , makeStyles, Tooltip} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    item: {\n        marginLeft:\"1%\", \n        marginRight: \"1%\",\n    },\n    paper: {\n        backgroundColor: theme.palette.secondary.light,\n        color: theme.palette.secondary.contrastText,\n        padding: \"1%\"\n    },\n    button: {\n        float: \"right\",\n        color: theme.palette.secondary.contrastText\n    },\n    card: {\n        zIndex: 2,\n        width: \"50%\",\n        float: \"right\"\n    },\n    title: {\n        overflowX: 'auto'\n    }\n      \n}))\n\nconst MovieCard = (props) => {\n    \n    const [hover, setHover] = useState(false)\n    const [clicked, setClicked] = useState(false)\n    const classes = useStyles()\n\n    const handleClick = () => {\n        props.handleNominated(props.movie)\n        setClicked(true)\n    }\n\n    return (\n        <Grid item xs={12} className={classes.item}>\n            <Slide \n            in={true} \n            direction=\"up\"\n            {...(true ? { timeout: (props.index + 5) * 100 } : {})}>\n                <Paper id={`movie-paper-${props.index}`} className={classes.paper} elevation={!hover ? 3 : 20} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)}>\n                <Tooltip title={`${props.movie.Title} (${props.handleYear(props.movie.Year)})`} arrow={true} placement=\"top\">\n                    <Typography variant=\"overline\" className={classes.title}>\n                        {props.movie.Title.length > 45 ? props.handleMovieTitle(props.movie.Title, 45) : props.movie.Title} ({props.handleYear(props.movie.Year)})\n                    </Typography>\n                </Tooltip>\n                <Button variant=\"contained\" size=\"small\" disabled={props.listFull || props.movie.selected || clicked} className={classes.button} color=\"primary\" onClick={() => handleClick()}>\n                    Nominate\n                </Button>\n                </Paper>\n            </Slide>\n        </Grid>\n    )\n}\n\nexport default MovieCard\n","import React, { useState } from 'react'\nimport { Paper, Typography, Grid, Slide, Button , makeStyles, Tooltip} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    item: {\n        marginLeft:\"1%\", \n        marginRight: \"1%\"\n    },\n    button: {\n        float: \"right\",\n        color: theme.palette.secondary.contrastText\n    },\n    paper: {\n        backgroundColor: theme.palette.secondary.light,\n        color: theme.palette.secondary.contrastText,\n        padding: \"1%\"\n    }\n}))\n\nconst NominationCard = (props) => {\n\n    const [hover, setHover] = useState(false)\n    const classes = useStyles()\n\n    return (\n        <Grid item xs={12} className={classes.item}>\n            <Slide \n            in={true} \n            direction=\"up\"\n            {...(true ? { timeout: (props.index + 5) * 100 } : {})}>\n                <Paper id={`nomination-paper-${props.index}`} className={classes.paper} elevation={!hover ? 3 : 20} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)}>\n                    <Tooltip title={`${props.nomination.Title} (${props.handleYear(props.nomination.Year)})`} arrow={true} placement=\"top\">\n                        <Typography variant=\"overline\" style={{overflowX: true}}>\n                            {props.nomination.Title.length > 40 ? props.handleMovieTitle(props.nomination.Title) : props.nomination.Title} ({props.handleYear(props.nomination.Year)})\n                        </Typography>\n                    </Tooltip>\n                    {!props.submitted ? <Button variant=\"contained\" size=\"small\" className={classes.button} color=\"secondary\" onClick={() => props.handleRemoved(props.index)}>\n                        Remove\n                    </Button> : <Button variant=\"outlined\" disabled size=\"small\" className={classes.button}>\n                        Remove\n                    </Button>}\n                </Paper>\n            </Slide>\n        </Grid>\n    )\n}\n\nexport default NominationCard\n","import React from 'react'\nimport MovieCard from './MovieCard'\nimport NominationCard from './NominationCard'\nimport {Grid, TextField, Button, Grow, Paper, Typography, Slide, makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    search: {\n      marginRight: \"10%\",\n      marginLeft: \"10%\",\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n    movieContainer: {\n      marginLeft: \"5%\"\n    },\n    gridItems: {\n      width: \"100%\"\n    },\n    text: {\n      textAlign: \"center\"\n    },\n    submit: {\n      width: \"94%\",\n      margin: \"3%\",\n    },\n    results: {\n      width: \"25%\",\n      margin: \"3%\",\n      borderRadius: \"5px 50px 50px 5px\",\n      float: \"right\",\n      color: theme.palette.secondary.contrastText\n    },\n    paper: {\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText,\n        maxHeight: window.innerHeight * .8,\n        overflowY: \"auto\"\n    },\n    label: {\n        color: theme.palette.secondary.contrastText,\n    },\n    input: {\n        color: theme.palette.secondary.contrastText,\n    },\n}))\n\nconst Nominations = (props) => {\n\n    const classes = useStyles()\n\n    const handleGetMovies = (ev) => {\n        props.fetchMovies(\"\")\n        props.fetchMovies(ev.target.value)\n    }\n\n    return (\n        <Slide in={!props.transitioning} direction=\"right\" timeout={{exit: 2000, enter:  0}}>\n            <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n                <Grid item xs={12} className={classes.gridItems}>\n                    <Paper elevation={3} className={classes.search}>\n                        <TextField id=\"outlined-search\" fullWidth={true} InputLabelProps={{className: classes.label}} InputProps={{className: classes.input}} label=\"Search Movies\" type=\"search\" autoComplete=\"off\" variant=\"standard\" onChange={(ev) => handleGetMovies(ev)}/>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} className={classes.gridItems}>\n                    <Grid container direction=\"row\" spacing={2}>\n                        <Grid item xs={5} className={classes.movieContainer}>\n                            <Paper elevation={3} className={classes.paper}>\n                                <Grid container direction=\"column\">\n                                <Grid item xs={12} className={classes.text}>\n                                    <Typography variant=\"overline\">\n                                    Movies\n                                    </Typography>\n                                </Grid>\n                                    {props.movies !== [] ? props.movies.map((movie, index) => {\n                                        return <MovieCard movie={movie} nominations={props.nominations} listFull={props.listFull} handleMovieTitle={props.handleMovieTitle} handleYear={props.handleYear} handleNominated={props.handleNominated} index={index} key={index} />\n                                    }) : null}\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={1}>\n\n                        </Grid>\n                        <Grid item xs={5} className={classes.nominationContainer}>\n                            <Paper elevation={3} className={classes.paper}>\n                                <Grid container direction=\"column\" spacing={2}>\n                                    <Grid item xs={12} className={classes.text}>\n                                        <Typography variant=\"overline\">\n                                            Your Nominated Movies\n                                        </Typography>\n                                    </Grid>\n                                    {props.nominations !== [] ? props.nominations.map((nomination, index) => {\n                                        return <NominationCard nomination={nomination} submitted={props.submitted} handleMovieTitle={props.handleMovieTitle} handleYear={props.handleYear} handleRemoved={props.handleRemoved} index={index} key={index}/>\n                                    }) : null}  \n                                    {props.listFull ? \n                                        <Grow in={props.listFull} timeout={3000}>\n                                            {!props.submitted ? <Button onClick={() => props.handleNominate()} color=\"primary\" variant=\"contained\" className={classes.submit} size=\"small\">\n                                                Submit Nominations\n                                            </Button> : \n                                            <Button variant=\"contained\" className={classes.submit} disabled size=\"small\">\n                                                Submit Nominations\n                                            </Button>}\n                                        </Grow>\n                                    : null}    \n                                </Grid>\n                            </Paper> \n                            <Grow in={props.submitted} timeout={1000} className={classes.results}>\n                                <Button onClick={() => props.setResultsPage(true)} color=\"primary\" variant=\"contained\" size=\"small\">\n                                    See Results\n                                </Button>    \n                            </Grow>\n                        </Grid>\n                    </Grid>    \n                </Grid>\n            </Grid>\n        </Slide>\n    )\n}\n\nexport default Nominations\n","import React, { useState, useEffect } from 'react'\nimport Grow from '@material-ui/core/Grow'\nimport { Grid, Paper, Typography, makeStyles, useTheme, Tooltip} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    first: {\n        marginLeft: \"2%\",\n        marginRight: \"2%\",\n        backgroundColor: \"#ffd700\",\n        color: theme.palette.secondary.contrastText,\n        padding: \"5px\",\n        width: \"95%\"\n    },\n    second: {\n        marginLeft: \"4%\",\n        marginRight: \"4%\",\n        backgroundColor: \"#bec2cb\",\n        color: theme.palette.secondary.contrastText,\n        padding: \"5px\",\n        width: \"90%\"\n    },\n    third: {\n        marginLeft: \"6%\",\n        marginRight: \"6%\",\n        backgroundColor: \"#cd7f32\",\n        color: theme.palette.secondary.contrastText,\n        padding: \"5px\",\n        width: \"85%\"\n    },\n    item: {\n        width: \"80%\",\n        marginLeft: \"8%\",\n        marginRight: \"8%\",\n        padding: \"5px\",\n        backgroundColor: theme.palette.secondary.light,\n        color: theme.palette.secondary.contrastText\n    }\n}))\n\nconst NominationResult = (props) => {\n\n    const [userNominated, setUserNominated] = useState(false)\n    const classes = useStyles()\n    const theme = useTheme()\n    const handleClass = () => {\n        switch (props.index) {\n            case 0:\n                return classes.first\n            case 1:\n                return classes.second\n            case 2:\n                return classes.third\n            default:\n                return classes.item\n        }\n    }\n\n    const handleTextWidth = () => {\n        switch (props.index) {\n            case 0:\n                return 40\n            case 1:\n                return 35\n            case 2:\n                return 30\n            default:\n                return 30\n        }\n    }\n\n    const checkIfUserNominated = () => {\n        props.nominations.forEach(nom => {\n            if(nom.Title === props.nomination.title){\n                setUserNominated(true)\n            }\n        })\n    }\n\n    useEffect(() => {\n        checkIfUserNominated()\n    }, [])\n\n    return (\n        <Grid item xs={12}>\n            <Grow \n            in={true} \n            {...(true ? { timeout: (props.index + 5) * 300 } : {})}>\n                <Paper id={`nomination-paper-${props.index}`} className={handleClass()} style={{border: userNominated ? `3px solid ${theme.palette.primary.light}`: \"0\"}} elevation={3}>\n                    <Tooltip title={`${props.nomination.title} (${props.handleYear(props.nomination.year)})`} arrow={true} placement=\"top\">\n                        <Typography variant=\"overline\">\n                            {props.nomination.title.length > handleTextWidth() ? props.handleMovieTitle(props.nomination.title, handleTextWidth()) : props.nomination.title} ({props.handleYear(props.nomination.year)}): Nominations - {props.nomination.total}\n                        </Typography>\n                    </Tooltip>\n                </Paper>\n            </Grow>\n        </Grid>\n    )\n}\n\nexport default NominationResult\n","import React, { useEffect, useState } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport {makeStyles} from '@material-ui/core/styles'\nimport NominationResult from './NominationResult'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        overflowY: \"auto\",\n        maxHeight: window.innerHeight * .7,\n        padding: \"1%\",\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText\n    },\n    title: {\n        textAlign: \"center\",\n    }\n}))\n\nconst NominationList = (props) => {\n\n    const [allNominations, setAllNominations] = useState([])\n\n    const classes = useStyles()\n    \n    const getAllNominations = async () => {\n        const server = process.env.REACT_APP_SERVER\n        const res = await fetch(`${server}/nominations`)\n            \n        const data = await res.json()\n\n        setAllNominations(data.nominations)\n\n    }\n\n    useEffect(() => {\n        getAllNominations()\n    }, [])\n\n    return (\n        <Paper variant=\"elevation\" elevation={3} className={classes.list}>\n            <Grid container direction=\"column\">\n                <Grid item xs={12} className={classes.title}>\n                    <Typography variant=\"overline\">\n                        <u>All Nominations</u>\n                    </Typography>\n                </Grid>\n                {allNominations !== [] ? allNominations.map( (nomination, index) => {\n                    return <NominationResult nomination={nomination} nominations={props.nominations} handleYear={props.handleYear} handleMovieTitle={props.handleMovieTitle} index={index} key={index} />\n                }) : null}\n            </Grid>   \n        </Paper>\n    )\n}\n\nexport default NominationList\n","import React, { useState } from 'react'\nimport { Grid, Slide, Paper, Typography, makeStyles, Tooltip } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    item: {\n        margin: \"2%\"\n    },\n    paper: {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.light,\n        border: `3px solid ${theme.palette.primary.light}`\n    }\n}))\n\nconst MyNominationCard = (props) => {\n\n    const [hover, setHover] = useState(false)\n    \n    const classes = useStyles()\n\n    return (\n        <Grid item xs={12} className={classes.item}>\n            <Slide \n            in={true} \n            direction=\"up\"\n            {...(true ? { timeout: (props.index + 5) * 100 } : {})}>\n                <Paper id={`nomination-paper-${props.index}`} className={classes.paper} elevation={!hover ? 3 : 20} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)}>\n                    <Tooltip title={`${props.nomination.Title} (${props.handleYear(props.nomination.Year)})`} arrow={true}  placement=\"top\">\n                        <Typography variant=\"overline\" style={{overflowX: true}}>\n                            {props.nomination.Title.length > 50 ? props.handleMovieTitle(props.nomination.Title, 50) : props.nomination.Title} ({props.handleYear(props.nomination.Year)})\n                        </Typography>\n                    </Tooltip>\n                </Paper>\n            </Slide>\n        </Grid>\n    )\n}\n\nexport default MyNominationCard\n","import React from 'react'\nimport { Paper, Typography, makeStyles, Grid } from '@material-ui/core'\nimport MyNominationCard from './MyNominationCard'\nconst useStyles = makeStyles(theme => ({\n    title: {\n        textAlign: \"center\",\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText\n    }\n}))\n\nconst MyNominations = (props) => {\n\n    const classes = useStyles()\n\n    return (\n        <Paper elevation={3} className={classes.title}>\n            <Grid container direction=\"column\">\n                <Grid item xs={12}>\n                    <Typography variant=\"overline\">\n                        <u>My Nominations</u>\n                    </Typography>\n                </Grid>\n                {props.nominations.map( (nomination, index) => {\n                   return <MyNominationCard handleYear={props.handleYear} handleMovieTitle={props.handleMovieTitle} nomination={nomination} index={index} key={index} />\n                })}\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default MyNominations\n","import React from 'react'\nimport { Grow, Grid, Typography, Paper, Button } from '@material-ui/core'\nimport { makeStyles }from '@material-ui/core/styles'\nimport NominationList from './NominationList'\nimport MyNominations from './MyNominations'\n\nconst useStyles = makeStyles(theme => ({\n    mainContainer: {\n        marginLeft: \"1%\"\n    },\n    results: {\n        textAlign: \"center\",\n        marginLeft: \"45%\",\n        marginRight: \"45%\",\n        marginBottom: \"2%\",\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText\n    },\n    back: {\n        borderRadius: \"25px 5px 5px 25px\",\n        marginLeft: \"5%\",\n        color: theme.palette.secondary.contrastText\n    }\n}))\n\n\nconst CheckResults = (props) => {\n\n    const classes = useStyles() \n\n    const handleBack = () => {\n        props.setResultsPage(false)\n        props.setTransitioning(false)\n    }\n\n    return (\n        <Grow in={props.submitted} direction=\"left\" timeout={{enter:  1000}}>\n            <Grid container direction=\"column\" alignItems=\"center\" className={classes.mainContainer}>\n                <Grid item xs={12}>\n                    <Button variant=\"contained\" color=\"primary\" size=\"small\" className={classes.back} onClick={() => handleBack()}>\n                        Back to search\n                    </Button>\n                    <Grow in={props.submitted} timeout={{enter:  2000}}>\n                        <Paper elevation={3} className={classes.results}>\n                            <Typography variant=\"overline\">\n                                Results\n                            </Typography>\n                        </Paper>\n                    </Grow>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container direction=\"row\" spacing={3}>\n                        <Grid item xs={1}>\n                          \n                        </Grid>\n                        <Grid item xs={5}>\n                            <Grow in={props.submitted} timeout={4000}>\n                                <NominationList handleYear={props.handleYear} nominations={props.nominations} handleMovieTitle={props.handleMovieTitle}/>\n                            </Grow>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <Grow in={props.submitted} timeout={5000}>\n                                <MyNominations handleYear={props.handleYear} handleMovieTitle={props.handleMovieTitle} nominations={props.nominations}/>                                      \n                            </Grow>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grow>\n    )\n}\n\nexport default CheckResults\n","import React from 'react'\nimport { Grid, Button, Typography, makeStyles, Grow } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    reset: {\n        margin: \"1%\"\n    },\n    note: {\n        color: theme.palette.secondary.contrastText\n    },\n    button: {\n        color: theme.palette.secondary.contrastText\n    }\n}))\n\nconst Reset = (props) => {\n    const classes = useStyles()\n\n    return (\n        <Grow in={props.submitted} timeout={{enter:  2000}}>\n            <Grid container direction=\"column\" alignItems=\"center\" className={classes.reset}>\n                <Grid item xs={12}>\n                    <Button variant=\"contained\" className={classes.button} size=\"small\" color=\"primary\" onClick={() => props.reset()}>\n                        Nominate Again?\n                    </Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography className={classes.note} variant=\"overline\">\n                        (testing purposes, would be removed in production)\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grow>\n    )\n}\n\nexport default Reset\n","import React, { useEffect, useState } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport {Typography, makeStyles, Switch } from '@material-ui/core'\nimport Nominations from './Nominations'\nimport CheckResults from './CheckResults'\nimport {ThemeProvider, createMuiTheme} from '@material-ui/core'\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport Reset from './Reset'\n\nconst theme1 = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#bef67a',\n      main: '#8bc34a',\n      dark: '#5a9216',\n      contrastText: '#222222',\n    },\n    secondary: {\n      light: '#888888',\n      main: '#5b5b5b',\n      dark: '#323232',\n      contrastText: 'whitesmoke',\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Arvo'\n    ].join(','),\n  },\n})\n\nconst theme2 = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#bef67a',\n      main: '#8bc34a',\n      dark: '#5a9216',\n      contrastText: '#222222',\n    },\n    secondary: {\n      light: '#FFFFFF',\n      main: '#F5F5F5',\n      dark: '#F5F5F5',\n      contrastText: '#222222',\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Arvo'\n    ].join(','),\n  },\n})\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: window.innerHeight * 1.2\n  },\n  header: {\n    marginBottom: \"1%\"\n  },\n  search: {\n    marginRight: \"10%\",\n    marginLeft: \"10%\",\n  },\n  movieContainer: {\n    marginLeft: \"5%\", \n    \n  },\n  nominationContainer: {\n    marginRight: \"1%\",\n    marginLeft: \"5%\"\n  },\n  gridItems: {\n    width: \"100%\"\n  },\n  text: {\n    textAlign: \"center\"\n  },\n  submit: {\n    width: \"94%\",\n    margin: \"3%\",\n  },\n  results: {\n    width: \"25%\",\n    margin: \"3%\",\n    borderRadius: \"5px 50px 50px 5px\",\n    float: \"right\"\n  },\n  switch: {\n    float: \"right\",\n  },\n  light: {\n    float: \"right\"\n  },\n  dark: {\n    float: \"right\",\n    marginRight: \"5%\"\n  }\n}))\n\nconst App = () => {\n  const [movies, setMovies] = useState([])\n  const [nominations, setNominations] = useState([])\n  const [listFull, setListFull] = useState(false)\n  const [submitted, setSubmitted] = useState(false)\n  const [resultsPage, setResultsPage] = useState(false)\n  const [transitioning, setTransitioning] = useState(false)\n  const [darkMode, setDarkMode] = useState(false)\n\n  const classes = useStyles()\n\n  const fetchMovies = (search) => {\n\n    const arr = search.split(\"\")\n\n    const key = process.env.REACT_APP_OMDB_API_KEY\n\n    if(search === \"\"){\n      setMovies([])\n    }\n    if(arr[arr.length - 1] !== \" \"){\n      fetch(`http://www.omdbapi.com/?s=${search}&apikey=${key}`)\n      .then((success) => success.json() )\n      .then((movies) => {\n        if(!movies.Error){\n          const movieArr = []\n          movies.Search.forEach(movie => {\n            let selected = false\n            nominations.forEach(nomination => {\n                if(nomination.Title === movie.Title && nomination.Year === movie.Year){\n                    selected = true\n                }\n            });\n            movieArr.push({Title: movie.Title, Year: movie.Year, selected: selected})\n          })\n          setMovies(movieArr) \n        }\n      })\n    }\n  }\n\n  const handleresultsPage = () => {\n    setResultsPage(true)\n  }\n\n  const getNominations = () => {\n    let iterator = 0\n    const arr = []\n    if(localStorage.getItem(\"submitted\")){\n      setSubmitted(true)\n      setResultsPage(true)\n    }\n    while(localStorage.getItem(`nomination-${iterator}`)){\n      const movieArr = localStorage.getItem(`nomination-${iterator}`).split(\",\")\n      arr.push({ Title: movieArr[0], Year: movieArr[1]})\n      iterator++\n    }\n    setNominations(arr)\n  }\n\n  const handleNominate = async () => {\n    const server = process.env.REACT_APP_SERVER\n    \n    nominations.forEach(async (nomination) => {\n      await fetch(`${server}/nominations`, {\n        method: \"POST\",\n        headers: {\"Content-Type\":\"application/json\"},\n        body: JSON.stringify({title: nomination.Title, year: nomination.Year})\n      })\n    })\n    localStorage.setItem(\"submitted\", \"true\")\n    setSubmitted(true)\n    setTransitioning(true)\n    setTimeout(handleresultsPage, 2500)\n  }\n\n  const checkListFull = () => {\n    if(nominations.length >= 5){\n      setListFull(true)\n    }\n    else{\n      setListFull(false)\n    }\n  }\n\n  const handleNominated = (movie) => {\n    const arr = [...nominations]\n    arr.push(movie)\n    setNominations(arr)\n    arr.forEach((nomination, index) => {\n      /*\n        Using localStorage instead of storing info in the backend database because user should not be required to sign in.\n        This way:  \n          1) Data still persists \n          2) User can cast nominations without signing up or signing in\n          3) The only data stored in local storage is publicly accessable information from the api\n      */\n      localStorage.setItem(`nomination-${index}`, [nomination.Title, nomination.Year])\n    })\n  }\n\n  const handleRemoved = async (index) => {\n    const arr = [...nominations]\n    arr.splice(index, 1)\n    setNominations(arr)\n    localStorage.clear()\n    arr.forEach((nomination, index) => {\n      localStorage.setItem(`nomination-${index}`, [nomination.Title, nomination.Year])\n    })\n    const search = document.querySelector(\"#outlined-search\")\n    search.value = \"\"\n    fetchMovies(search.value)\n  }\n\n  const handleMovieTitle = (title, length) => {\n    const string = title.substring(0, length) + \"...\"\n    return string\n  }\n\n  const handleYear = (year) => {\n    const stringLength = year.length\n    const lastChar = year.charAt(stringLength - 1)\n\n    if(parseInt(lastChar) || lastChar === \"0\"){\n        return year\n    }\n    \n    year = year.substring(0, stringLength - 1)\n    return year\n  }\n\n  const reset = () => {\n    localStorage.clear()\n    setResultsPage(false)\n    setNominations([])\n    setSubmitted(false)\n    setTransitioning(false)\n    fetchMovies(\"\")\n  }\n\n  useEffect(() => {\n    checkListFull()\n  }, [nominations])\n\n  useEffect(()=> {\n    getNominations()\n  }, [])\n\n  return (\n    <ThemeProvider theme={darkMode ? theme1 : theme2}>\n      <Paper id=\"App\" elevation={3} className={classes.root} style={{backgroundColor: darkMode ? theme1.palette.secondary.dark : theme2.palette.secondary.main}}>\n        <Paper elevation={3} className={classes.header} style={{backgroundColor: darkMode ? theme1.palette.secondary.main : theme2.palette.secondary.light}}>\n          <Typography variant=\"h2\" color=\"primary\" align=\"center\">\n            Shoppies Movie Awards\n          </Typography>\n        </Paper>\n        <Brightness3Icon className={classes.dark} style={{color: darkMode ? theme1.palette.primary.main : theme1.palette.secondary.light}}/>\n        <Switch size=\"small\" color=\"primary\" checked={darkMode} className={classes.switch} onChange={() => setDarkMode(!darkMode)} />\n        <BrightnessHighIcon className={classes.light} color={darkMode ? \"secondary\" : \"primary\"}/> \n        {resultsPage ? null : <Nominations submitted={submitted} setResultsPage={setResultsPage} transitioning={transitioning} classes={classes} movies={movies} nominations={nominations} fetchMovies={fetchMovies} listFull={listFull} handleYear={handleYear} handleNominated={handleNominated} handleMovieTitle={handleMovieTitle} handleRemoved={handleRemoved} handleNominate={handleNominate}/>}\n        {resultsPage ? <CheckResults submitted={submitted} nominations={nominations} setTransitioning={setTransitioning} setResultsPage={setResultsPage} handleYear={handleYear} handleMovieTitle={handleMovieTitle} /> : null}\n        {submitted ? <Reset reset={reset} submitted={submitted} /> : null}\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {ThemeProvider, createMuiTheme} from '@material-ui/core'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#bef67a',\n      main: '#8bc34a',\n      dark: '#5a9216',\n      contrastText: '#222222',\n    },\n    secondary: {\n      light: '#747474',\n      main: '#494949',\n      dark: '#222222',\n      contrastText: 'white',\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Arvo'\n    ].join(','),\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}